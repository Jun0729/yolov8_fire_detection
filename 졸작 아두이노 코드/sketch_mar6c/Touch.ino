int x, y;  // 터치 이벤트에서 사용할 X, Y 좌표 변수

// 터치된 좌표에 따라 특정 동작을 수행하는 함수
void handleTouch(int x, int y) {
  // 터치된 좌표가 공대 가동의 영역(화면에서 (95,165) ~ (125,195) 사이에 있을 때)
  if ((y >= 165) && (y <= 195) && (x >= 95) && (x <= 125)) {
    blinkGa = false;  // 공대 가동의 깜빡임을 멈춤
    myGLCD.setColor(255, 255, 255);  // 색상을 하얀색으로 설정

    // 공대 가동 위치에 반지름 15의 원을 그림 (화면 상에서 (108, 63) 좌표)
    myGLCD.drawCircle(108, 63, 15);
  } 
  // 터치된 좌표가 공대 나동의 영역(화면에서 (155,125) ~ (185,155) 사이에 있을 때)
  else if ((y >= 125) && (y <= 155) && (x >= 155) && (x <= 185)) {
    blinkNa = false;  // 공대 나동의 깜빡임을 멈춤
    myGLCD.setColor(255, 255, 255);  // 색상을 하얀색으로 설정

    // 공대 나동 위치에 반지름 15의 원을 그림 (화면 상에서 (166, 105) 좌표)
    myGLCD.drawCircle(166, 105, 15);
  } 
  // 터치된 좌표가 공대 다동의 영역(화면에서 (190,90) ~ (220,120) 사이에 있을 때)
  else if ((y >= 90) && (y <= 120) && (x >= 190) && (x <= 220)) {
    blinkDa = false;  // 공대 다동의 깜빡임을 멈춤
    myGLCD.setColor(255, 255, 255);  // 색상을 하얀색으로 설정

    // 공대 다동 위치에 반지름 15의 원을 그림 (화면 상에서 (207, 142) 좌표)
    myGLCD.drawCircle(207, 142, 15);
  } 
  // 터치된 좌표가 GPS 비트맵 이미지의 영역(화면에서 (240,20) ~ (270,45) 사이에 있을 때)
  else if ((y >= 20) && (y <= 45) && (x >= 240) && (x <= 270)) {
    MA();  // 메인화면(MA 함수)으로 돌아감
    myGLCD.print(" GPS MODE           ", LEFT, 204);  // 화면에 "GPS MODE" 출력
    gpsstate = true;  // GPS 모드를 활성화
  } 
  // 터치된 좌표가 Home 비트맵 이미지의 영역(화면에서 (280,20) ~ (310,45) 사이에 있을 때)
  else if ((y >= 20) && (y <= 45) && (x >= 280) && (x <= 310)) {
    gpsstate = false;  // GPS 모드를 비활성화
    MA();  // 메인화면으로 돌아감
  }

  // 만약 이미지가 표시된 상태라면 (imageDisplayed 플래그가 true일 때)
  if (imageDisplayed) {
    imageDisplayed = false;  // 이미지가 더 이상 표시되지 않음을 나타냄- 불이 난 이미지를 끄는 플래그
    MA();  // 메인화면(MA 함수)으로 돌아감
  }
}

// 터치 입력을 감지하고 처리하는 함수
void checkTouch() {
  // 터치스크린에서 터치 이벤트가 감지될 경우
  if (myTouch.dataAvailable()) {
    myTouch.read();  // 터치 입력을 읽어들임
    x = myTouch.getX();  // 터치된 X 좌표를 얻음
    y = myTouch.getY();  // 터치된 Y 좌표를 얻음
    handleTouch(x, y);  // 터치된 좌표를 처리하는 함수 호출
  }
}
